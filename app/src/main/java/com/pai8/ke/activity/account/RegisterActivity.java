package com.pai8.ke.activity.account;import android.content.Intent;import android.os.Bundle;import android.os.CountDownTimer;import android.text.TextUtils;import com.blankj.utilcode.util.RegexUtils;import com.blankj.utilcode.util.ToastUtils;import com.lhs.library.base.BaseActivity;import com.pai8.ke.activity.common.WebViewActivity;import com.pai8.ke.databinding.ActivityRegisterBinding;import com.pai8.ke.global.GlobalConstants;import com.pai8.ke.viewmodel.RegisterViewModel;import org.jetbrains.annotations.Nullable;public class RegisterActivity extends BaseActivity<RegisterViewModel, ActivityRegisterBinding> {    @Override    public void initView(@Nullable Bundle savedInstanceState) {        mBinding.btGetCode.setOnClickListener(v -> getCode());        mBinding.btnRegister.setOnClickListener(v -> register());        mBinding.tvRegisterpro.setOnClickListener(v -> {  // 注册协议            WebViewActivity.launch(this, GlobalConstants.HTTP_SERVER_PROTOCOL, "注册协议");        });    }    @Override    protected void onDestroy() {        super.onDestroy();        if (countDownTimer != null) {            countDownTimer.cancel();            countDownTimer = null;        }    }    private CountDownTimer countDownTimer;    private boolean validMobile() {        if (!RegexUtils.isMobileSimple(mBinding.etUserName.getText())) {            ToastUtils.showShort("请输入正确的手机号");            return false;        }        return true;    }    @Override    public void addObserve() {        mViewModel.getGetCodeData().observe(this, data -> ToastUtils.showShort("验证码发送成功,请注意查收"));        mViewModel.getRegisterCodeData().observe(this, data -> {            ToastUtils.showShort("注册成功");            Intent intent = new Intent(getBaseContext(), LoginActivity.class);            intent.putExtra("userPhone", mBinding.etUserName.getText().toString());            setResult(RESULT_OK, intent);            finish();        });    }    private void getCode() {        if (!validMobile()) {            return;        }        countDownTimer = new CountDownTimer(120 * 1000, 1000) {            @Override            public void onTick(long millisUntilFinished) {                mBinding.btGetCode.setClickable(false);                mBinding.btGetCode.setText(millisUntilFinished / 1000 + "s后重新发送");            }            @Override            public void onFinish() {                mBinding.btGetCode.setText("获取验证码");                mBinding.btGetCode.setClickable(true);            }        };        countDownTimer.start();        mViewModel.getCode(mBinding.etUserName.getText().toString());    }    private void register() {        if (!validMobile()) {            return;        }        if (TextUtils.isEmpty(mBinding.etMessage.getText())) {            ToastUtils.showShort("验证码不能为空");            return;        }        String pwd = mBinding.etPwd.getText().toString();        String pwd2 = mBinding.etPwdconfirm.getText().toString();        if (TextUtils.isEmpty(pwd) || pwd.length() < 6) {            ToastUtils.showShort("密码至少6位以上");            return;        }        if (!pwd.equalsIgnoreCase(pwd2)) {            ToastUtils.showShort("两次输入的密码不一致");            return;        }        mViewModel.register(mBinding.etUserName.getText().toString(), mBinding.etMessage.getText().toString(), pwd);    }}